<Window x:Class="Fruits.Wpf.Core.Main.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:Fruits.Wpf.Core.View.Converters"
        mc:Ignorable="d"
        DataContext="{Binding ViewModelMain, Source={StaticResource Locator}}"
        Title='База данных "Фрукты"' MinHeight="600" MinWidth="1090" Width="1500" WindowStartupLocation="CenterScreen">

    <Window.Resources>
        <converters:ConverterVisibility x:Key="ConverterVisibility"/>
        <converters:ConverterForegroundTextError x:Key="ConverterForegroundTextError"/>
        <converters:ConverterWidth x:Key="ConverterWidth"/>

        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, 
                        Path=(Validation.Errors)[0].ErrorContent}" />
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid x:Name="MainGrid" Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>


        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center">

            <Button Command="{Binding ReportCommand}" Content="Отчет" Margin="0,0,0,0" VerticalAlignment="Center"/>

            <GroupBox Header="Справочники" BorderThickness="1" BorderBrush="Blue" Padding="3" Margin="70,0,0,0">
                <StackPanel Orientation="Horizontal">
                    <StackPanel.Resources>
                        <!--Кнопки-->
                        <Style TargetType="Button" BasedOn="{StaticResource BlueButtonStyle}">
                            <Setter Property="Width" Value="90" />
                            <Setter Property="Height" Value="28" />
                            <Setter Property="Margin" Value="5" />
                            <Setter Property="VerticalAlignment" Value="Top" />
                            <Setter Property="HorizontalAlignment" Value="Center" />
                        </Style>
                    </StackPanel.Resources>

                    <Button Command="{Binding FruitsCatalogCommand}" Content="Фрукты" Margin="2" Width="150"/>
                    <Button Command="{Binding PriceCatalogCommand}" Content="График поставок" Margin="2" Width="150"/>
                    <Button Command="{Binding ProvidersCatalogCommand}" Content="Поставщики" Margin="2" Width="150"/>
                </StackPanel>
            </GroupBox>

            <Button Command="{Binding LoadStockCommand}" Content="Выгрузить" Margin="40,0,0,0" VerticalAlignment="Center"/>
            <Button Command="{Binding SaveStockCommand}" Content="Сохранить" Margin="20,0,0,0" VerticalAlignment="Center"/>
        </StackPanel>

        <Grid Grid.Row="1" Grid.Column="0" Margin="10,10,10,0" IsEnabled="{Binding FormStockLock}">

            <DockPanel IsEnabled="{Binding FormStockPropLock}">
                <StackPanel DockPanel.Dock="Left" DataContext="{Binding ListStockEntry}">
                    <Label Margin="5,0,0,0">Дата поставки</Label>
                    <DatePicker SelectedDate="{Binding DeliveryDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SelectedDateFormat="Long" Margin="5,0,5,5" Width="150"
                                HorizontalAlignment="Left" />
                </StackPanel>

                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" VerticalAlignment="Center" Margin="10,0,5,0">
                    <Button Command="{Binding AddStockCommand}" Content="Добавить" Margin="2" />
                    <Button Command="{Binding RemoveStockCommand}" Content="Удалить" Margin="2" />
                </StackPanel>

                <StackPanel Margin="5,0,0,5">
                    <Label>Поставщик</Label>
                    <ComboBox ItemsSource="{Binding ComboBoxListProvidersCatalog, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              DisplayMemberPath="NameProvider" IsSynchronizedWithCurrentItem="True" Width="NaN" HorizontalAlignment="Stretch"
                              SelectedValue="{Binding ComboBoxListProvidersCatalogEntry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>
            </DockPanel>
        </Grid>

        <Label Grid.Row="2" Grid.Column="0" Margin="15,0,0,0">Поставки</Label>
        <ListView x:Name="ListViewStock" Grid.Row="3" Grid.Column="0" Margin="10,0,10,10" IsEnabled="{Binding FormStockLock}"
                  ItemsSource="{Binding ListStock}" SelectedItem="{Binding ListStockEntry, UpdateSourceTrigger=PropertyChanged}" >
            <ListView.ItemTemplate>
                <DataTemplate>
                    <DockPanel Margin="0,5,5,0">
                        <StackPanel DockPanel.Dock="Left" Style="{StaticResource ListStyleStackPanel}" Width="100">
                            <Label Content="Дата поставки" Style="{StaticResource ListStyleLabelBlue}" />
                            <TextBlock Text="{Binding Path=DeliveryDate, StringFormat=d}" Style="{StaticResource ListStyleTextBlock}" />
                        </StackPanel>
                        <StackPanel DockPanel.Dock="Right" Style="{StaticResource ListStyleStackPanel}" Width="150">
                            <Label Content="Сумма" Style="{StaticResource ListStyleLabelBlue}" />
                            <TextBlock Text="{Binding Path=PriceSumm, StringFormat={}{0:C}}" Style="{StaticResource ListStyleTextBlock}" 
                                       TextWrapping="Wrap"
                                       Foreground="{Binding ListStockFruits, Converter={StaticResource ConverterForegroundTextError}, ConverterParameter=Price}"/>
                        </StackPanel>
                        <StackPanel DockPanel.Dock="Right" Style="{StaticResource ListStyleStackPanel}" Width="100">
                            <Label Content="Вес, кг" Style="{StaticResource ListStyleLabelBlue}" />
                            <TextBlock Text="{Binding Path=MassSumm}" Style="{StaticResource ListStyleTextBlock}" 
                                       Foreground="{Binding ListStockFruits, Converter={StaticResource ConverterForegroundTextError}, ConverterParameter=Mass}"/>
                        </StackPanel>

                        <StackPanel Style="{StaticResource ListStyleStackPanel}">
                            <Label Content="Поставщик" Style="{StaticResource ListStyleLabelBlue}" />
                            <TextBlock Text="{Binding Path=Provider.NameProvider}" Style="{StaticResource ListStyleTextBlock}" 
                                       TextWrapping="Wrap"
                                       Width="{Binding ActualWidth, Converter={StaticResource ConverterWidth}, ConverterParameter=420, ElementName=ListViewStock}"/>
                        </StackPanel>
                    </DockPanel>


                </DataTemplate>
            </ListView.ItemTemplate>

            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">

                                <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                                    Background="{TemplateBinding Background}" 
                                                    Padding="{TemplateBinding Padding}" 
                                                    Margin="{TemplateBinding Margin}">

                                    <ContentPresenter/>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="True">
                                        <Setter Property="BorderBrush" Value="GreenYellow"></Setter>
                                        <Setter Property="BorderThickness" Value="1"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>

                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="GreenYellow" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="Crimson"></Setter>
                                <Setter Property="BorderThickness" Value="2"></Setter>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </Style.Triggers>

                </Style>
            </ListView.ItemContainerStyle>

        </ListView>

        <!--==================================================-->

        <Grid Grid.Row="1" Grid.Column="1" Margin="10,10,10,0">

            <DockPanel IsEnabled="{Binding DataContext.FormStockFruitsPropLock, ElementName=MainGrid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                       DataContext="{Binding ListStockFruitsEntry}">
                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" DataContext="{Binding DataContext, ElementName=MainGrid}" 
                            VerticalAlignment="Center" 
                            Margin="5,0,5,0">
                    <Button Command="{Binding AddStockFruitsCommand}" Content="Добавить" Margin="2" />
                    <Button Command="{Binding RemoveStockFruitsCommand}" Content="Удалить" Margin="2" />
                </StackPanel>
                <StackPanel DockPanel.Dock="Right" IsEnabled="{Binding DataContext.PriceCatalogPropLock, ElementName=MainGrid}">
                    <Label Content="Цена, за Кг" Margin="5,0,0,0"/>
                    <TextBox Width="150">
                        <TextBox.Text>
                            <Binding Path="Price" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay" StringFormat="{}{0:C}">
                                <Binding.ValidationRules>
                                    <DataErrorValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </StackPanel>
                <StackPanel DockPanel.Dock="Right">
                    <Label Content="Вес, кг" Margin="5,0,0,0"/>
                    <TextBox Width="100">
                        <TextBox.Text>
                            <Binding Path="Mass" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                                <Binding.ValidationRules>
                                    <DataErrorValidationRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </StackPanel>

                <StackPanel Margin="5,0,5, 5" DataContext="{Binding Path=DataContext, ElementName=MainGrid}">
                    <Label>Фрукт</Label>
                    <ComboBox ItemsSource="{Binding ComboBoxListFruitsCatalog, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              DisplayMemberPath="FullName" IsSynchronizedWithCurrentItem="True" Width="NaN" HorizontalAlignment="Stretch"
                              SelectedValue="{Binding ComboBoxListFruitsCatalogEntry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>
            </DockPanel>
        </Grid>

        <Label Grid.Row="2" Grid.Column="1" Margin="15,0,0,0">Комплект поставки</Label>
        <ListView x:Name="ListViewStockFruits" Grid.Row="3" Grid.Column="1" Margin="10,0,10,10" 
                  ItemsSource="{Binding ListStockFruits}" 
                  SelectedItem="{Binding ListStockFruitsEntry}" d:ItemsSource="{d:SampleData ItemCount=5}" >
            <ListView.ItemTemplate>
                <DataTemplate>

                    <DockPanel Margin="0,5,5,0">
                        <StackPanel DockPanel.Dock="Right" Style="{StaticResource ListStyleStackPanel}" Width="170">
                            <Label Visibility="{Binding PriceCatalogLbl, Converter={StaticResource ConverterVisibility}}" Foreground="Red" 
                                   Content="Цена, за Кг (из справочника)" Style="{StaticResource ListStyleLabelBlue}" />
                            <Label Visibility="{Binding PriceLbl, Converter={StaticResource ConverterVisibility}}" 
                                   Content="Цена, за Кг" Style="{StaticResource ListStyleLabelBlue}" />
                            <TextBlock Text="{Binding Path=Price, StringFormat={}{0:C}}" Style="{StaticResource ListStyleTextBlock}" 
                                       Foreground="{Binding ListHasErrorProperty, Converter={StaticResource ConverterForegroundTextError}, ConverterParameter=Price}"/>
                        </StackPanel>
                        <StackPanel DockPanel.Dock="Right" Style="{StaticResource ListStyleStackPanel}" Width="100">
                            <Label Content="Вес, кг" Style="{StaticResource ListStyleLabelBlue}" />
                            <TextBlock Text="{Binding Path=Mass}" Style="{StaticResource ListStyleTextBlock}"
                                       Foreground="{Binding ListHasErrorProperty, Converter={StaticResource ConverterForegroundTextError}, ConverterParameter=Mass}"/>
                        </StackPanel>

                        <StackPanel Style="{StaticResource ListStyleStackPanel}">
                            <Label Content="Фрукт" Style="{StaticResource ListStyleLabelBlue}" />
                            <TextBlock Text="{Binding Path=FullName}" Style="{StaticResource ListStyleTextBlock}" 
                                       TextWrapping="Wrap"
                                       Width="{Binding ActualWidth, Converter={StaticResource ConverterWidth}, ConverterParameter=330, ElementName=ListViewStockFruits}"/>
                        </StackPanel>
                    </DockPanel>

                </DataTemplate>
            </ListView.ItemTemplate>

            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">

                                <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                                    Background="{TemplateBinding Background}" 
                                                    Padding="{TemplateBinding Padding}" 
                                                    Margin="{TemplateBinding Margin}">

                                    <ContentPresenter/>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="True">
                                        <Setter Property="BorderBrush" Value="GreenYellow"></Setter>
                                        <Setter Property="BorderThickness" Value="1"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>

                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="Yellow" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="Crimson"></Setter>
                                <Setter Property="BorderThickness" Value="2"></Setter>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </Style.Triggers>

                </Style>
            </ListView.ItemContainerStyle>

        </ListView>

    </Grid>
</Window>
