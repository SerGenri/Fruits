<Window x:Class="Fruits.Wpf.Core.Catalog.PriceCatalog.WindowPriceCatalog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:db="clr-namespace:Fruits.Domain.DB;assembly=Fruits.Domain"
        xmlns:converters="clr-namespace:Fruits.Wpf.Core.View.Converters"
        mc:Ignorable="d"
        DataContext="{Binding ViewModelPriceCatalog, Source={StaticResource Locator}}"
        Title='График поставок' Height="600" Width="1024"  WindowStartupLocation="CenterScreen">
    
    <Window.Resources>
        <converters:ConverterForegroundTextError x:Key="ConverterForegroundTextError"/>

        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, 
                        Path=(Validation.Errors)[0].ErrorContent}" />
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
            </Style.Triggers>

            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <StackPanel>
                            <!-- Placeholder for the TextBox itself -->
                            <AdornedElementPlaceholder x:Name="textBox" />
                            <TextBlock Text="{Binding [0].ErrorContent}" Foreground="Red"/>
                        </StackPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="DatePicker" BasedOn="{StaticResource {x:Type DatePicker}}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={RelativeSource Self}, 
                        Path=(Validation.Errors)[0].ErrorContent}" />
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Margin="10,5,10,10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Grid.Column="0" IsEnabled="{Binding BoolListPriceCatalogEntry}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <GroupBox Grid.Column="0" Header="Период поставки" BorderThickness="1" BorderBrush="Blue" Padding="3" Margin="10,0,10,10">
                <StackPanel DataContext="{Binding ListPriceCatalogEntry}">
                    <StackPanel>
                        <Label Content="С"></Label>
                        <DatePicker>
                            <DatePicker.SelectedDate>
                                <Binding Path="StartDate" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <DataErrorValidationRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </DatePicker.SelectedDate>
                        </DatePicker>
                    </StackPanel>

                    <StackPanel>
                        <Label Content="По"></Label>
                        <DatePicker>
                            <DatePicker.SelectedDate>
                                <Binding Path="EndDate" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <DataErrorValidationRule />
                                    </Binding.ValidationRules>
                                </Binding>
                            </DatePicker.SelectedDate>
                        </DatePicker>
                    </StackPanel>
                </StackPanel>
            </GroupBox>

            <StackPanel Grid.Column="1">
                <StackPanel>
                    <Label Margin="5,0,0,0">Поставщик</Label>
                    <ComboBox Margin="5,0,5,5" 
                              ItemsSource="{Binding ComboBoxListProvidersCatalog, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              DisplayMemberPath="NameProvider" IsSynchronizedWithCurrentItem="True" Width="NaN" HorizontalAlignment="Stretch"
                              SelectedValue="{Binding ComboBoxListProvidersCatalogEntry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>

                <StackPanel>
                    <Label Margin="5,0,0,0">Фрукт</Label>
                    <ComboBox Margin="5,0,5,5"
                              ItemsSource="{Binding ComboBoxListFruitsCatalog, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              DisplayMemberPath="FullName" IsSynchronizedWithCurrentItem="True" Width="NaN" HorizontalAlignment="Stretch"
                              SelectedValue="{Binding ComboBoxListFruitsCatalogEntry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>
            </StackPanel>

            <StackPanel Grid.Column="2" Margin="5,0,10,10">
                <Label Content="Цена, за Кг"></Label>
                <TextBox>
                    <TextBox.Text>
                        <Binding Path="ListPriceCatalogEntry.Price" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"
                                 StringFormat="{}{0:C}">
                            <Binding.ValidationRules>
                                <DataErrorValidationRule />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </StackPanel>
        </Grid>

        <DataGrid Grid.Row="1" Grid.Column="0" AutoGenerateColumns="False"
                  ItemsSource="{Binding ListPriceCatalog}" SelectedItem="{Binding ListPriceCatalogEntry}">
            <DataGrid.Columns>

                <DataGridTemplateColumn Header="Период С" Width="100">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="db:PriceCatalog">
                            <TextBlock Text="{Binding StartDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=d}" 
                                       Foreground="{Binding ListHasErrorProperty, Converter={StaticResource ConverterForegroundTextError}, ConverterParameter=StartDate}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Период По" Width="100">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="db:PriceCatalog">
                            <TextBlock Text="{Binding EndDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat=d}" 
                                       Foreground="{Binding ListHasErrorProperty, Converter={StaticResource ConverterForegroundTextError}, ConverterParameter=EndDate}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>


                <DataGridTemplateColumn Header="Поставщик" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="db:PriceCatalog">
                            <TextBlock Text="{Binding Provider.NameProvider, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                        TextWrapping="Wrap"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Фрукт" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="db:PriceCatalog">
                            <TextBlock Text="{Binding Fruit.FullName}" 
                                        TextWrapping="Wrap"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Цена, за Кг" Width="150">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="db:PriceCatalog">
                            <TextBlock Text="{Binding Price, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:C}}" 
                                       TextWrapping="Wrap"
                                       Foreground="{Binding ListHasErrorProperty, Converter={StaticResource ConverterForegroundTextError}, ConverterParameter=Price}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
        </DataGrid>

        <StackPanel Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="10" Orientation="Vertical">
            <Button Margin="10" Command="{Binding AddCommand}">Добавить</Button>
            <Button Margin="10" Command="{Binding RemoveCommand}">Удалить</Button>
            <Button Margin="10" Command="{Binding SaveCommand}">Сохранить</Button>
            <Button Margin="10" Command="{Binding LoadCommand}">Выгрузить</Button>
        </StackPanel>

    </Grid>
</Window>
